/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import data.entities.Operation;
import data.entities.Ship;
import data.entities.Unloading;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Objects;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author jhoul
 */
public class Harbor extends javax.swing.JFrame {

    private ArrayList<Ship> ships;
    public static boolean available = true;

    public Harbor() {
        initComponents();
    }

    public Harbor(ArrayList<Ship> ships) {
        initComponents();
        this.ships = ships;
        this.jTextArea1.setText("Iniciando a operação...");
    }

    public void start() {
        sortShips();
        this.ships.forEach((ship) -> {
            ship.getThrd().run();
            try {
                ship.getThrd().join();
            } catch (InterruptedException ex) {
                Logger.getLogger(Harbor.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    private void sortShips() {
        this.ships.forEach((ship) -> {
            ship.setHarbor(this);
            if (ship.getOperation() instanceof Unloading) {
                if (Objects.equals(ship.getOperation().getType(), Operation.PERECIVEL)) {
                    ship.getThrd().setPriority(Thread.MAX_PRIORITY);
                } else {
                    ship.getThrd().setPriority(Thread.MAX_PRIORITY - 1);
                }
            } else {
                if (Objects.equals(ship.getOperation().getType(), Operation.PERECIVEL)) {
                    ship.getThrd().setPriority(Thread.NORM_PRIORITY + 1);
                } else {
                    ship.getThrd().setPriority(Thread.MIN_PRIORITY);
                }
            }
        });

        Collections.sort(ships, (Ship ship1, Ship ship2) -> Integer.compare(ship2.getThrd().getPriority(), ship1.getThrd().getPriority()));
    }

    public synchronized void operation(Ship ship) {
        System.out.println("Navio: " + ship.getName() + " Operação: " + ship.getOperation().getName() + " Prioridade: " + ship.getThrd().getPriority());
        while (Harbor.available == false) {
            try {
                //wait for Producer to put value
                wait();
            } catch (InterruptedException e) {
            }
        }

        Harbor.available = false;
        notifyAll();
        try {
            Thread.sleep(ship.getOperation().getTime());
        } catch (InterruptedException ex) {
            Logger.getLogger(Harbor.class.getName()).log(Level.SEVERE, null, ex);
        }
        available = true;
        this.jTextArea1.setText(this.jTextArea1.getText() + "\n"
                + "Navio: " + ship.getName() + " Operação: " + ship.getOperation().getName() + " Prioridade: " + ship.getThrd().getPriority());
        notifyAll();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("T");
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Harbor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Harbor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Harbor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Harbor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Harbor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
